{"version":3,"sources":["components/map.js","api/index.js","components/project.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","width","height","MapContainer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","dist","google","props","zoom","style","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","baseURL","axios","Axios","create","timeout","project","statusText","statusColor","status","className","backgroundColor","src","image_url","progress","name","location","budget","toLocaleString","description","borderTop","defineProperty","href","App","state","projects","scrollDown","document","getElementById","scrollIntoView","_this2","get","concat","then","res","setState","toConsumableArray","data","catch","err","console","log","onClick","alt","type","placeholder","id","map","item","i","components_project","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38a1e5e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '1200px'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n         lat: -1.2884,\r\n         lng: 36.8233\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAjrn94ozMxDZ80NONb5YN2LQKck-96qJc'\r\n})(MapContainer);","import Axios from 'axios';\r\n// const baseURL = \"http://Localhost:3030\";\r\nconst baseURL = \"https://sela-assessment.herokuapp.com\"\r\n\r\n\r\nconst axios = Axios.create({\r\n    baseURL,\r\n    timeout: 10000,\r\n    // headers: {\r\n    //     \"accepts\":\"application/json\"\r\n    // }\r\n  });\r\n\r\n\r\nexport const getProjects = () => {\r\n    return axios.get(`${baseURL}/project`);\r\n};\r\n","import React from 'react';\r\n\r\nconst project = (props) => {\r\n    //defaulted #EB5757\r\n    //completed #333333\r\n    //notinitiated #9B51E0\r\n    //initiated #27AE60\r\n    //on track to be defaulted #F2994A\r\n    //on track to be completed #828282\r\n    let statusText, statusColor\r\n    switch(props.project.status){\r\n        case 'defaulted':\r\n            statusText = \"Defaulted\";\r\n            statusColor = '#EB5757';\r\n            break;\r\n        case 'completed':\r\n            statusText = \"Completed\";\r\n            statusColor = '#333333';\r\n            break;\r\n        case 'not initiated':\r\n            statusText = \"Not initiated\";\r\n            statusColor = '#9B51E0';\r\n            break;\r\n        case 'initiated':\r\n            statusText = \"Initiated\";\r\n            statusColor = '#27AE60';\r\n            break;\r\n        case 'to default':\r\n            statusText = \"On track to be defaulted\";\r\n            statusColor = '#F2994A';\r\n            break;\r\n        case 'to complete':\r\n            statusText = \"On track to be completed\";\r\n            statusColor = '#828282';\r\n            break;\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-1-of-2 project\">\r\n            <div className=\"project-image--cont\">\r\n                <div className=\"project-image--status\" style={{backgroundColor:statusColor}}>{statusText}</div>\r\n                <img src={'/images/' + props.project.image_url} className=\"project-image\" />\r\n                <div className=\"project-image--progress\"><span className=\"project-image--progressInnerSpan\">{props.project.progress}% complete</span><div className=\"project-image--progressInner\" style={{width:props.project.progress + '%'}}> </div></div>\r\n            </div>\r\n            <div className=\"project-content--cont\">\r\n                <h3 className=\"heading-secondary\">{props.project.name}</h3>\r\n                <div className=\"flex-row project-content--info u-margin-botom-medium u-space-between \">\r\n                <div className=\"flex-row\"><img src=\"/img/location-marker.svg\" className=\"project-content--icon\"/>{props.project.location}</div>\r\n                <div className=\"flex-row\"><img src=\"/img/money-icon.svg\" className=\"project-content--icon\"/>Budget: ${props.project.budget.toLocaleString()}</div>\r\n                </div>\r\n                <p className=\"project-content--text u-margin-botom-medium\">\r\n                    {props.project.description}\r\n                </p>\r\n                <hr className=\"u-margin-botom-small\" style={{borderTop:'1px solid rgba(0, 0, 0, 0.2)'}}/>\r\n                <h5 className=\"heading-tertiary\">Contractors</h5>\r\n                <div className=\"flex-row\" className=\"project-contractors-cont\">\r\n                <img src=\"/img/header.png\"  className=\"project-contractors-avatar\"/>\r\n                </div>\r\n                <a href=\"#\" className=\"btn-tertiary\"><span>view more details</span> <img src=\"/img/forward-icon.svg\" /></a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default project","import React, { Component } from 'react';\nimport Map from './components/map';\nimport { getProjects } from './api';\nimport Project from './components/project';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    projects: []\n  }\n  componentDidMount(){\n    getProjects()\n    .then(res=>{\n      this.setState({projects:[...res.data.data]})\n    })\n    .catch(err=>{\n      console.log(err);\n    })\n\n  }\n\n  scrollDown = () => {\n    document.getElementById('projects').scrollIntoView(true);\n  }\n\n  render(){\n    return (\n      <div>\n        <header className=\"header\">\n          <a href=\"#\" className=\"btn u-margin-top-primary\">sela</a>\n          <div className=\"u-absolute-center heading-primary \">\n            <h1 className=\"heading-primary--main\">Keep track of development projects near you</h1>\n            <h2 className=\"heading-primary--sub \">The Sela Platform enables stakeholders share real time information on the state of infrastructure projects to ensure transparent delivery</h2>\n          </div>\n          <a href=\"#projects\" onClick={this.scrollDown} className=\"btn-secondary u-absolute-horizontal-center\">see projects <img src=\"/img/expand-icon.svg\" alt=\"expand icon\" className=\"btn-secondary--icon\" /></a>\n        </header>\n        <main>\n          <div className=\"flex-row search-bar\">\n            <div className=\"flex-1-of-3 search-bar--description\">\n                search projects by location\n            </div>\n\n            <div className=\"flex-2-of-3\">\n              <input type=\"text\" placeholder=\"Ikorodu, Lagos\" className=\"search-bar--input\"/>\n            </div>\n          </div>\n          <div className=\"map\" id=\"map\">\n            <Map />\n          </div>\n          <div className=\"section-project\" id=\"projects\">\n            <div className=\"flex-row cont project-sorter\">\n              <div className=\"project-sorter--label\">All Projects</div>\n              <div className=\"project-sorter--cont\">\n                <span>Sort by</span>\n                <span>Budget <img src=\"/img/expand-icon.svg\" alt=\"sort icon\" className=\"project-sorter--icon\" /></span>\n                <span>Start Date <img src=\"/img/expand-icon.svg\" alt=\"sort icon\" className=\"project-sorter--icon\" /></span>\n                <span>End Date <img src=\"/img/expand-icon.svg\" alt=\"sort icon\" className=\"project-sorter--icon\" /></span>\n              </div>\n            </div>\n            {\n              this.state.projects ? \n              <div className=\"row\" >\n              {\n                this.state.projects.map((item,i)=>{\n                  return (\n                    \n                      <Project key={i} project={item}/>\n                    \n                  )\n                })\n              }</div> : null\n            }\n          </div>\n        </main>\n        <footer className=\"row footer u-align-center\">\n            <div className=\"u-inline-block\">&copy; Sela. 2019\t</div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}